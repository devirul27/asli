apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'jacoco'
apply plugin: 'com.github.ben-manes.versions'

android {
    compileSdkVersion project.targetSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionName "70.0.10.3"
        vectorDrawables.useSupportLibrary = true

    }

    sourceSets {
        hixproPlus.setRoot('src/HixproPlus')
        blekoklite.setRoot('src/Blekoklite')
    }

    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled true
            shrinkResources false
            proguardFiles 'proguard-project.txt'
            testCoverageEnabled true
        }

        release {
            multiDexEnabled true
            minifyEnabled true
            shrinkResources false
            proguardFiles 'proguard-project.txt'
            testCoverageEnabled false


            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    testOptions {
        unitTests.all {
            jacoco {
                // This option needs to be included for robolectric tests
                includeNoLocationClasses = true
            }
        }
    }

    flavorDimensions "capabilities"

    productFlavors {
        hixproPlus {
            dimension "capabilities"
            buildConfigField "boolean", "FULL_VERSION", "Boolean.parseBoolean(\"true\")"
            applicationId "com.blekokmontok.browser"
            versionCode 1
        }

        blekoklite {
            dimension "capabilities"
            buildConfigField "boolean", "FULL_VERSION", "Boolean.parseBoolean(\"false\")"
            applicationId "com.blekokmontok.browser"
            versionCode 1
        }
    }

    dataBinding{
        enabled true
    }
    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude '.readme'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

jacoco {
    toolVersion = '0.7.9' // See http://www.eclemma.org/jacoco/
}

dexcount {
    includeClasses = false
    includeFieldCount = false
    format = "tree"
    orderByMethodCount = true
    verbose = false
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.ironsource.adapters:facebookadapter:4.3.27'
    implementation 'com.ironsource.sdk:mediationsdk:7.1.6'

    // multidex debug
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    debugImplementation 'androidx.multidex:multidex:2.0.1'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.GrenderG:Toasty:1.2.5'
    implementation 'com.shreyaspatil:MaterialDialog:2.1'
    // test dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.assertj:assertj-core:3.13.2'
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0', {
        exclude group: 'org.jetbrains.kotlin'
    }
    testImplementation 'org.robolectric:robolectric:4.3'
    implementation 'com.pixplicity.easyprefs:library:1.9.0'
    implementation "com.airbnb.android:lottie:3.4.0"
    implementation 'com.github.pepperonas:materialdialog:0.3.4'
    implementation "com.airbnb.android:lottie:2.8.0"

    // support libraries
    implementation "androidx.palette:palette:1.0.0"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.vectordrawable:vectordrawable-animated:1.1.0"
    implementation 'androidx.appcompat:appcompat:1.2.0-alpha02'
    implementation 'com.google.android.material:material:1.1.0-alpha08'
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.core:core:1.1.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.fragment:fragment:1.1.0"
    implementation "androidx.drawerlayout:drawerlayout:1.0.0"
    implementation 'com.anjlab.android.iab.v3:library:1.0.44'
    implementation 'eu.dkaratzas:android-inapp-update:1.0.4'



    // html parsing for reading mode
    implementation 'org.jsoup:jsoup:1.11.3'

    // file reading
    final def mezzanineVersion = '1.1.1'
    implementation "com.anthonycr.mezzanine:mezzanine:$mezzanineVersion"
    kapt "com.anthonycr.mezzanine:mezzanine-compiler:$mezzanineVersion"
    // dependency injection
    final def daggerVersion = '2.29'
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // view binding
    implementation 'com.jakewharton:butterknife:10.2.1'
    kapt 'com.jakewharton:butterknife-compiler:10.2.1'
    // permissions
    implementation 'com.anthonycr.grant:permissions:1.1.2'
    implementation 'io.github.dreierf:material-intro-screen:0.0.6'
    // proxy support
    implementation 'net.i2p.android:client:0.9.42'
    implementation 'net.i2p.android:helper:0.9.5'
    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
    implementation 'io.github.dreierf:material-intro-screen:0.0.6'

    implementation 'com.squareup.okhttp3:okhttp:3.12.3'
    implementation 'com.github.hotchemi:android-rate:1.0.1'    // rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.12'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.4.0'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-analytics:17.2.0'
    implementation 'com.firebase:firebase-client-android:2.5.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.android.play:core:1.6.0'
    implementation 'com.facebook.android:audience-network-sdk:6.+'
    implementation 'com.android.support:customtabs:28.0.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.amitshekhar.android:android-networking:1.0.2'
    implementation 'com.anjlab.android.iab.v3:library:1.0.44'

    // Glide image loader
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'



    // tor proxy
    final def netCipherVersion = '2.0.0-alpha1'
    implementation "info.guardianproject.netcipher:netcipher:$netCipherVersion"
    implementation "info.guardianproject.netcipher:netcipher-webkit:$netCipherVersion"

    implementation 'com.anthonycr.progress:animated-progress:1.0'

    // memory leak analysis
    final def leakCanaryVersion = '1.6.3'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.core:core-ktx:1.2.0-alpha04'
}

kapt {
    arguments {
        arg("mezzanine.projectPath", project.rootDir)
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = '1.8'
        kotlinOptions {
            freeCompilerArgs += ['-XXLanguage:+InlineClasses']
            freeCompilerArgs += ['-progressive']
        }
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testLightningPlusDebugUnitTest', 'createLightningPlusDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    executionData fileTree(dir: "$buildDir", includes: [
            "jacoco/testLightningPlusDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

apply plugin: 'com.google.gms.google-services'
